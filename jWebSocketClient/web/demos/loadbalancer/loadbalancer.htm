<!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01//EN" "http://www.w3.org/TR/html4/transitional.dtd">
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="chrome=1">
		<!-- If Google's chrome frame installed, use it! -->
		<!-- Comment needs to be BELOW this meta tag! -->
		<!--
		//	****************************************************************************
		//	jWebSocket Load Balancer Demo (Community Edition, CE)
		//	****************************************************************************
		//	Copyright 2010-2013 Innotrade GmbH (jWebSocket.org)
		//  Alexander Schulze, Germany (NRW)
		//
		//	Licensed under the Apache License, Version 2.0 (the "License");
		//	you may not use this file except in compliance with the License.
		//	You may obtain a copy of the License at
		//
		//	http://www.apache.org/licenses/LICENSE-2.0
		//
		//	Unless required by applicable law or agreed to in writing, software
		//	distributed under the License is distributed on an "AS IS" BASIS,
		//	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
		//	See the License for the specific language governing permissions and
		//	limitations under the License.
		//	****************************************************************************
		-->
		<meta http-equiv="Content-Language" content="en">
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<title>jWebSocket Load Balancer Demo</title>
		<link rel="stylesheet" type="text/css" href="../../res/css/jwebsocket.css">
		<link rel="stylesheet" type="text/css" href="loadbalancer.css">

		<script src="../../res/js/jWebSocket.js" type="text/javascript"></script>
		<script src="../../res/js/jwsDemoPlugIn.js" type="text/javascript"></script>
		<script src="../../res/js/jwsLoadBalancerPlugIn.js" type="text/javascript"></script>
		<script src="../../res/js/jwsLoadBalancerService.js" type="text/javascript"></script>
		

		<script type="text/javascript" language="JavaScript">
		
			var myConnections = new Array();
			var mCount=0;
		
			function endPointInfo(){
				log("Runing cluster endpoint info");
				if( lWSC.isConnected() ) {
					lWSC.clusterEndPointsInfo( {
						OnResponse: function( aToken ) {
						   log(aToken);
						}
					});
				} else {
					log( "Not connected." );
				}
			}
		
			function stickyRoutes() {
				log("Runing sticky routes");
				if( lWSC.isConnected() ) {
					lWSC.stickyRoutes( {
						OnResponse: function( aToken ) {
							log(aToken);
						}
					});
				} else {
					log( "Not connected." );
				}
			}
			
			function shutdownEndpoint(){
				log("Runing shutdown endpoint");
				if( lWSC.isConnected() ) {
					var lEpId = jws.$( "stxfEpId" ).value;
					var lClusterAlias = jws.$( "stxfAlias2" ).value;
					lWSC.shutdownEndpoint( {
						epId: lEpId,
						clusterAlias : lClusterAlias,
						OnResponse: function( aToken ) {
							log(aToken);
						}
					});
				} else {
					log( "Not connected." );
				}
			}
			
			function registerServiceEndPoint(){
				log("Runing register service endpoint");
				var lClusterAlias = jws.$( "stxfAlias1" ).value;
				jws.myConn = new jws.jWebSocketJSONClient();
				jws.myConn.open("ws://localhost:8787/jWebSocket/jWebSocket", {
					OnOpen: function (){
						jws.myConn.registerServiceEndPoint( {
							clusterAlias : lClusterAlias,
							OnResponse: function( aToken ) {
								log(aToken);
							}
						});		
					},	
				});					
				myConnections[mCount++]=jws.myConn;
			}	
				
			function deregisterServiceEndPoint() {
				log("Runing deregister service endpoint");
				if( lWSC.isConnected() ) {
					var lEpId = jws.$( "stxfEpId" ).value;
					var lClusterAlias = jws.$( "stxfAlias2" ).value;
					lWSC.deregisterServiceEndPoint( {
						epId: lEpId,
						clusterAlias : lClusterAlias,
						OnResponse: function( aToken ) {
							log(aToken);
						}
					});
				} else {
					log( "Not connected." );
				}
			}
			
			function sum (){
				log("Runing sum values");
				if( lWSC.isConnected() ) {
					var lVal1 = jws.$( "stxVal1" ).value;
					var lVal2 = jws.$( "stxVal2" ).value;
					lWSC.sendSum( {
						val1: lVal1,
						val2 : lVal2,
						OnResponse: function( aToken ) {
							log(aToken);
						}
					});
				} else {
					log( "Not connected." );
				}
			}
			
			function initPage() {
				
			}

			function exitPage() {
				
			}

		</script>
	</head>

	<body>
		onload="initPage();"
		onunload="exitPage();"
		
		<script type="text/javascript">
			jws.DemoPlugIn.buildDemoPage({
				title: "Load Balancer",
				header: "jWebSocket Load Balancer Demo",
				description: "This demo shows how to use the Load Balancer and your functionalities."
			});
			processInitPage();
		</script>
		
		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" >
							
				<tr class="strDlg">
					<td class="stdDlg" id="stdDlg" width="5">Cluster Alias
					</td>
					<td class="stdDlg" id="stdSelect">
						<select name="cluster" id="stxfAlias1">
							<option value="service1">service1</option>
							<option value="service2">service2</option>
						</select>
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnRegisterServiceEndPoint" type="button" value="Register Service EndPoint" onclick="registerServiceEndPoint();"
							   title="Registers a new service endpoint.">
					</td>
				</tr> 
				
			</table>
		</div>

		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" >
				
				<tr class="strDlg">
					<td class="stdDlg" id="stdDlg" width="5">Cluster Alias
					</td>
					<td class="stdDlg" width="100">
						<select name="cluster" id="stxfAlias2">
							<option value="service1">service1</option>
							<option value="service2">service2</option>
						</select>
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnDeregisterServiceEndPoint" type="button" value="Deregister Service EndPoint" onclick="deregisterServiceEndPoint();"
							   title="Deregister an especific endpoint.">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnEndPointInfo" type="button" value="Endpoints Info" onclick="endPointInfo();"
							   title="Detailed information about all endpoints of the clusters.">
					</td>
				</tr>
				
				<tr class="strDlg">
					<td class="stdDlg" id="stdDlg" width="30">EndPoint Id
					</td>
					<td class="stdDlg" width="100">
						<input class="stxfDlg" id="stxfEpId" type="text" value="" style="width:99%"
							   title="The SQL query for select or update, insert, delete commands.">
					</td>
					<td class="stdDlg" width="42%">
						<input class="sbtnDlg" id="sbtnShutdownEndpoint" type="button" value="Shutdown EndPoints" onclick="shutdownEndpoint();"
							   title="Shutdown an especific endpoint.">	
					</td>
					<td class="stdDlg">
						<input class="sbtnDlg" id="sbtnStickyRoutes" type="button" value="Sticky Routes" onclick="stickyRoutes();"
							   title="Detailed information about all sticky routes.">
					</td>
				</tr>
				
			</table>
		</div>
		
		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" >
				
				<tr class="strDlg">
					<td class="stdDlg" id="stdDlg" width="5">First value
					</td>
					<td class="stdDlg" width="100">
						<input class="stxfDlg" id="stxVal1" type="text" value="" style="width:99%"
							   title="First value.">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnSum" type="button" value="Sum" onclick="sum();"
							   title="To sum two values.">
					</td>
				</tr>
				<tr class="strDlg">
					<td class="stdDlg" id="stdDlg" width="30">Second value
					</td>
					<td class="stdDlg" width="100">
						<input class="stxfDlg" id="stxVal2" type="text" value="" style="width:99%"
							   title="Second value.">
					</td>
				</tr>
				
			</table>
		</div>

	</body>
</html>
