<!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01//EN" "http://www.w3.org/TR/html4/transitional.dtd">
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="chrome=1">
		<!-- If Google's chrome frame installed, use it! -->
		<!-- Comment needs to be BELOW this meta tag! -->
		<!--
		//	****************************************************************************
		//	jWebSocket Scripting Demo (Community Edition, CE)
		//	****************************************************************************
		//	Copyright 2010-2013 Innotrade GmbH (jWebSocket.org)
		//  Alexander Schulze, Germany (NRW)
		//
		//	Licensed under the Apache License, Version 2.0 (the "License");
		//	you may not use this file except in compliance with the License.
		//	You may obtain a copy of the License at
		//
		//	http://www.apache.org/licenses/LICENSE-2.0
		//
		//	Unless required by applicable law or agreed to in writing, software
		//	distributed under the License is distributed on an "AS IS" BASIS,
		//	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
		//	See the License for the specific language governing permissions and
		//	limitations under the License.
		//	****************************************************************************
		-->
		<meta http-equiv="Content-Language" content="en">
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<title>jWebSocket ScriptingPlugIn Demo</title>
		<link rel="stylesheet" type="text/css" href="../../res/css/jwebsocket.css">

		<script src="../../res/js/jWebSocket.js" type="text/javascript"></script>
		<script src="../../res/js/jwsDemoPlugIn.js" type="text/javascript"></script>
		<script src="../../res/js/jwsScriptingPlugIn.js" type="text/javascript"></script>

		<script type="text/javascript" language="JavaScript">
			
			function handleScriptingMsg( aToken ) {
			}
			
			function callIfLogin(fn){
				if (!lWSC.isConnected()){
					log( "Connect first!" );
				} else {
					if( lWSC.getUsername() != null && lWSC.getUsername() != 'anonymous' ) {
						fn();
					} else {
						log( "Login first!" );
					}
				}
			}
			
			function callMethod( ) {
				callIfLogin(function(){
					log( "Calling method server side script app..." );
					
					lWSC.callScriptAppMethod( 
					document.getElementById("appsselect").value, 
					document.getElementById("stxfObject").value, 
					document.getElementById("stxfMethod").value, 
					JSON.parse(document.getElementById("stxfArgs").value));
				})
			}
			
			function getManifest( ) {
				callIfLogin(function(){
					log( "Getting server side script app deployment manifest..." );
					
					lWSC.getScriptAppManifest(document.getElementById("appsselect").value);
				});
			}
			
			function getVersion( ) {
				callIfLogin(function(){
					log( "Getting server side script app version..." );
					
					lWSC.getScriptAppVersion( 
					document.getElementById("appsselect").value);
				});
			}
			
			function reload( ) {
				callIfLogin(function(){
					log( "Reloading server side script app..." );
					
					lWSC.reloadScriptApp( 
					document.getElementById("appsselect").value,
					document.getElementById("schkHotReload").checked);
				});
			}
			
			function fillAppsSelect(){
				lWSC.listScriptApps({ userOnly: true,
					OnSuccess: function(aResponse){
						var select = document.getElementById("appsselect");
						for(var lAppName in aResponse.data) {
							select.options[select.options.length] = new Option(lAppName, lAppName);
						}
					}
				});
			}
			
			function initPage() {
				eFunc = jws.$( "stxfFunc" );
				eArgs = jws.$( "stxfArgs" );
				
				lWSC.addPlugIn({
					processToken: function(aToken){
						if (0 == aToken.code){
							if (aToken.reqType == 'login'){
								// fill app names in select
								fillAppsSelect();
								
							} else if (aToken.reqType == 'logout'){
								var select = document.getElementById("appsselect");
								while (select.length > 0){
									select.remove();
								}
							}
						}
					}
				});
			}

			function exitPage() {
				// processExitPage();
			}

		</script>
	</head>

	<body
		onload="initPage();"
		onunload="exitPage();"
		>
		<script type="text/javascript">
			jws.DemoPlugIn.buildDemoPage({
				title: "Scripting",
				header: "jWebSocket Scripting Demo",
				description: "This demo shows how to manage server side script apps in jWebSocket."
			});
			processInitPage();
		</script>

		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" >
				<tr class="strDlg">
					<td class="stdDlg">
						Select app:<select class="sselDlg" id="appsselect" title="List of deployed Script Apps" style="width:99%">
						</select>
					</td>
					<td class="stdDlg" width="">
						Object:<br><input class="stxfDlg" id="stxfObject" type="text" value="" style="width:99%"
										  title="The published object id of the object that contains the method to be called.">
					</td>
					<td class="stdDlg" width="">
						Method:<br><input class="stxfDlg" id="stxfMethod" type="text" value="" style="width:99%"
										  title="The method to be called.">
					</td>
					<td class="stdDlg" width="">
						Arguments:<br><input class="stxfDlg" id="stxfArgs" type="text" value="[]" style="width:99%"
											 title='The arguments to be passed to the method. Use JSON array notation, example: ["jWebSocket", 2013]'>
					</td>
				</tr>
			</table>
			<table>
				<tr class="strDlg">
					<td>
						<input class="sbtnDlg" id="sbtnInvoke" type="button" value="Call method" onclick="callMethod();"
							   title="Calls a method on a server side script app.">
					</td>
					<td>
						<input class="sbtnDlg" id="sbtnManifest" type="button" value="Get Manifest" onclick="getManifest();"
							   title="Gets the deployment manifest of a server side script app.">
					</td>
					<td>
						<input class="sbtnDlg" id="sbtnVersion" type="button" value="Get Version" onclick="getVersion();"
							   title="Gets the version of a server side script app.">
					</td>
					<td>
						Hot Reload:<input type="checkbox" id="schkHotReload" checked="checked" 
										  title="Hot reloads keep in memory the app context w/o to destroy in memory objects.">
						<input class="sbtnDlg" id="sbtnReload" type="button" value="Reload" onclick="reload();"
							   title="Reloads a server side script app.">
					</td>
					<td>
						<input class="sbtnDlgBig" id="sbtnReload" type="button" value="Download demo app" onclick="javascript:window.location.href='demoApp.zip';"
							   title="Downloads a packaged demo script app for testing.">
					</td>
				</tr>
			</table>
		</div>
	</body>
</html>
